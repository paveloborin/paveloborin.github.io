<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Pavel Oborin</title>
    <link>https://pavel.oborin.me/posts/</link>
    <description>Recent content in Posts on Pavel Oborin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-RU</language>
    <lastBuildDate>Sat, 21 Jul 2018 12:30:57 +0500</lastBuildDate>
    
	<atom:link href="https://pavel.oborin.me/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Как прокинуть доступ из контейнера к внешним сервисам с самоподписаными сертификатами</title>
      <link>https://pavel.oborin.me/posts/doker-certificate/</link>
      <pubDate>Sat, 21 Jul 2018 12:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/doker-certificate/</guid>
      <description>Задача:
Нужно сделать запрос из апи, развернутой в контейнере, к апи, стоящей за доменом с самоподписанным сертификатом. Обычно для того чтобы зайти локально из браузера на такой сайт необходимо принять сертификат.
При попытке вызвать такой сервис из докера будет ошибка: “x509: certificate signed by unknown authority”.
Решение:
Прокинуть файл сертификата в контейнер и добавить в список доверенных.
Для нужно добавить в ваш Dockerfile следующие строки:
COPY tmp/Company-issuer-chain.pem /usr/local/share/ca-certificates/Company-issuer-chain-chain.crt
RUN update-ca-certificates</description>
    </item>
    
    <item>
      <title>Нужно ли коммитить vendor</title>
      <link>https://pavel.oborin.me/posts/vendor/</link>
      <pubDate>Thu, 12 Jul 2018 17:35:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/vendor/</guid>
      <description>Мой совет: коммитьте.
Объясню почему. Вообще эта тема довольно холиварная - одни говорят коммитить, другие говорят ни в коем случае. У тех и у других есть свои весомые аргументы. До недавнего времени я был во второй группе. Но как-то после массовых блокировок Роскомнадзора, заблокировали и репозитории с пакетами, которыми я пользовался. Приложение перестало собираться. Работа встала на несколько часов.
Мир несовершенен, поэтому коммитьте.</description>
    </item>
    
    <item>
      <title>Как превратить создание фикстур в интересное занятие</title>
      <link>https://pavel.oborin.me/posts/fixtures/</link>
      <pubDate>Wed, 04 Jul 2018 16:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/fixtures/</guid>
      <description>Люди редко пишут о чем-то совершенно новом, обычно компенсируя этот недостаток количеством текста. Данная заметка небольшая, но на мой взгляд содержит новую мысль, возможно, еще никем до меня не озвученную и в этом ее главная ценность.
Однажды я полдня писал фикстуры и это меня изрядно утомило. Мне пришла в голову одна идея. Скучное занятие написания фикстур можно сделать интересным и даже любимым, если при написании фикстур привлечь творческий элемент и использовать в фикстурах данные имеющие для вас какую-то ценность.</description>
    </item>
    
    <item>
      <title>Один опыт выкатывания большой фичи</title>
      <link>https://pavel.oborin.me/posts/upgrade/</link>
      <pubDate>Sat, 09 Jun 2018 09:54:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/upgrade/</guid>
      <description>Вступление Статья состоит из трех частей и заключения. В первой рассказывается о типах развития программных продуктов и о том, насколько важны апгрейды в жизненном цикле систем для сохранения их конкурентоспособности. Во второй описаны мои размышления о непосредственной роли разработчика в развитии программных систем. В третьей предлагается подход к минимизации рисков при апгрейде систем, основанный на правильной архитектуре, использовании переключателей для плавного выкатывания фичи на продакшен и правильно выстроенных отношениях разработчика с нужными людьми в компании.</description>
    </item>
    
    <item>
      <title>Стратегия очагового внедрения автотестов. Часть II: Концепция очаговой модели. Очаговая модель, как паттерн распространения тестов в системе</title>
      <link>https://pavel.oborin.me/posts/tests-part2/</link>
      <pubDate>Mon, 04 Jun 2018 15:41:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/tests-part2/</guid>
      <description>Вернуться к первой части
Концепция очаговой модели внедрения тестов В своей зметке я не ставлю перед собой цели осветить все вопросы и ошибки при встраивании тестов в уже работающую систему. Основная моя задача обсудить такую распространенную ошибку как применение «тактики единого центра» при добавлении тестов в систему, когда код всех подсистем переносится, прирастая к некой единой базе.
Рассмотрим пример. Допустим у вас есть три подсистемы:
 Система А: полностью покрыта тестами, своеобразный эталон; Система Б: система с большой долей легаси кода, частично покрыта тестами; Система В: очень древний код, но при этом активно задействованный.</description>
    </item>
    
    <item>
      <title>Инструменты для форматирования и анализа кода в Go</title>
      <link>https://pavel.oborin.me/posts/go-tools/</link>
      <pubDate>Mon, 04 Jun 2018 02:43:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/go-tools/</guid>
      <description>Форматирование импортов Использование:
$ goimports -d -w $(find . -type f -name &amp;lsquo;.go&amp;rsquo; -not -path &amp;ldquo;./vendor/&amp;rdquo;) 
Установка: $ go get golang.org/x/tools/cmd/goimports 
Автоформатирование кода Использование:
$ go fmt ./&amp;hellip; 
Анализ корректной обработки ошибок Использование:
$ errcheck ./&amp;hellip; 
Установка:
$ go get -u github.com/kisielk/errcheck 
Анализ кода по множеству параметров Использование:
$ gometalinter ./&amp;hellip; &amp;ndash;exclude=vendor 
Установка:
$ go get -u gopkg.in/alecthomas/gometalinter.v2  $ gometalinter &amp;ndash;install</description>
    </item>
    
    <item>
      <title>Стратегия очагового внедрения автотестов. Часть I: О роли тестирования</title>
      <link>https://pavel.oborin.me/posts/tests-part1/</link>
      <pubDate>Fri, 01 Jun 2018 18:43:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/tests-part1/</guid>
      <description>Вступление Сегодня тестирование при разработке программного обеспечения переместилось с некогда периферийных позиций на первый план, превратившись в одну из ее центральных частей. Если брать во внимание огромную сложность современных программных продуктов, то автотесты - это едва ли не единственная причина почему разработчики еще могут спокойно спать по ночам. Между тем для большинства разработчиков обучение написанию тестов до сих пор остается второстепенной задачей.
Среди множества обучающих ресурсов на любой вкус: по ООП, разработке, рефакторингу и тд, можно прокачать свои скилы в программировании, но, как только речь заходит о тестировании каждый остается практически наедине с самим собой.</description>
    </item>
    
    <item>
      <title>Да поможет нам Go. Базовые ценности и основы философии языка Go по мотивам курса Билла Кеннеди</title>
      <link>https://pavel.oborin.me/posts/go-bless-us/</link>
      <pubDate>Sat, 12 May 2018 10:58:57 +0200</pubDate>
      
      <guid>https://pavel.oborin.me/posts/go-bless-us/</guid>
      <description>Аннотация Предугадывая возможную негативную реакцию, поспешу заметить, что конечно любой человек на вопрос что он предпочтет: послушать лекцию человека, совершившего некое открытие, или лектора, который ничего не открыл, но построил свою лекцию на описании чужого открытия, выбрал бы первое. Поэтому, если у вас есть возможность получить доступ к самому курсу, то нет никакого резона продолжать это чтение. В любом случае как и любой вторичный продукт этот текст представляет собой нечто пережеванное и замутненное.</description>
    </item>
    
    <item>
      <title>Система индивидуального планирования за 3000 руб на базе Orange Pi и Jira</title>
      <link>https://pavel.oborin.me/posts/jira-and-orange-pi/</link>
      <pubDate>Tue, 01 May 2018 10:58:57 +0200</pubDate>
      
      <guid>https://pavel.oborin.me/posts/jira-and-orange-pi/</guid>
      <description>Вступление В начале года я стал активно использовать JIRA для индивидуального планирования. Что сразу отозвалось повышением моей личной производителньости. Через пару месяцев я решил, что старый ноутбук для этого не самое лучшее решение и можно сделать лучше.
Я являюсь поклонником философии микросервисов; докер, контейнеры, кубернетис - наше все. И мне очень импонирует сама идея существования неким образом инкапсулированной системы, работающей на &amp;ldquo;отдельной&amp;rdquo; машине, не разделяющей больше ни с кем свои ресурсы.</description>
    </item>
    
    <item>
      <title>GDPR краткий обзор. Мысли и рекомендации</title>
      <link>https://pavel.oborin.me/posts/gdpr/</link>
      <pubDate>Sat, 31 Mar 2018 18:43:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/gdpr/</guid>
      <description>С 26 мая 2018 г. вступает в силу GDPR новый европейский закон о защите персональных данных.
Хорошее представление о законе могут дать первоисточник :) и аналитика от Института Исследования Интернета
О GDPR и его значении Закон предъявляет целый ряд существенных требований к обработке персональных данных жителей Евросоюза (точнее любого человека, находящегося на территории ЕС). Нарушение требований будет &amp;ldquo;караться&amp;rdquo; большими штрафами (озвучена цифра в 20 млн евро), потерей репутации и, возможно, запретом на работу на европейском рынке, а также уголовной ответственностью.</description>
    </item>
    
    <item>
      <title>Jira в качестве индивидуального планировщика</title>
      <link>https://pavel.oborin.me/posts/jira-for-individual-use/</link>
      <pubDate>Wed, 31 Jan 2018 08:53:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/jira-for-individual-use/</guid>
      <description>Jira в качестве индивидуального планировщика “А время уходит, жизнь твоя тратится на ерунду” (с)
Аннотация В статье описан опыт использование JIRA в качестве системы индивидуального планирования. Автор рассказывает о предпосылках в пользу такого выбора, описывает процедуру установки и дает советы по использованию.
Предыстория За неделю до Нового года я решил подвести итоги своей работы за уходящий год. Такие итоги позволяют получить более целостную картину своих результатов, и по ней дать оценку своей работе, проанализировать неудачи, выявить слабые стороны, над которыми нужно работать, и тп.</description>
    </item>
    
    <item>
      <title>Размышление о разработчиках</title>
      <link>https://pavel.oborin.me/posts/village-programmers/</link>
      <pubDate>Mon, 11 Dec 2017 22:42:10 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/village-programmers/</guid>
      <description>Размышление о разработчиках Недавно моя сестра решила сделать ремонт у себя в ванной и наняла человека, целиком положившишь на рекомендации одной своей знакомой. В итоге этот человек допустил все грубейшие ошибки какие только было можно: установил унитаз высоко и не по центру туалета, сделал трубу слива в ванной выше уровня слива самой ванной, двери в ванной и в туалете разной высоты. Сестра отдала за работу свой месячный оклад и две недели времени на контроль за исправлением (расстаться с “мастером” и нанять нового выходило уже намного дороже запланированного бюджета).</description>
    </item>
    
    <item>
      <title>Краткое введение в безопасность приложений</title>
      <link>https://pavel.oborin.me/posts/introduction-to-application-security/</link>
      <pubDate>Thu, 26 Oct 2017 17:53:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/introduction-to-application-security/</guid>
      <description>Краткое введение в безопасность приложений Перевод статьи Scott Arciszewski «A Gentle Introduction to Application Security». Вступление У меня есть печальные новости для программистов, читающих эту заметку. Но, забегая вперед, сразу скажу что нет худа без добра.
Новость первая: если вы являетесь веб-разработчиком или только размышляете о том, чтобы начать изучать веб-разработку, то, вероятнее всего, вы не думаете о себе как о специалисте по безопасности. Может быть, вы принимаете во внимание некоторые угрозы безопасности, например, при валидации пользовательских данных.</description>
    </item>
    
  </channel>
</rss>