<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pavel Oborin</title>
    <link>https://pavel.oborin.me/</link>
    <description>Recent content on Pavel Oborin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-RU</language>
    <lastBuildDate>Tue, 12 Feb 2019 20:30:40 +0500</lastBuildDate>
    
	<atom:link href="https://pavel.oborin.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Три мелодии из фильмов</title>
      <link>https://pavel.oborin.me/just-for-fan/writings/tml/</link>
      <pubDate>Tue, 12 Feb 2019 20:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/writings/tml/</guid>
      <description>       </description>
    </item>
    
    <item>
      <title>Подвалы Достоевского</title>
      <link>https://pavel.oborin.me/just-for-fan/book-reviews/the-master-of-petersburg/</link>
      <pubDate>Mon, 28 Jan 2019 20:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/book-reviews/the-master-of-petersburg/</guid>
      <description>В новогодние праздники я прочитал роман “Осень в Петербурге” Кутзее. Это постмодернистская притча о Достоевском, которую, судя по рецензиям в Интернете, каждый истолковывает как может. Я тоже решил не оставаться в стороне, хотя бы потому что достаточно прочитал и Кутзее и Достоевского, и внести свою посильную лепту в интерпретацию этого удивительного текста.
По сюжету у Достоевского погибает его приемный сын Павел, и ФМ приезжает в Петербург проститься с сыном. Россия конца XIX века, Петербург, грязь, подвалы, нищие, полицейские, проститутки, революционеры, голодные полуголые дети, замерзающие собаки, серость, слякоть и холод и все в этом духе.</description>
    </item>
    
    <item>
      <title>My publications list</title>
      <link>https://pavel.oborin.me/publications/list/</link>
      <pubDate>Sat, 08 Dec 2018 10:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/publications/list/</guid>
      <description>Как обеспечить доступность веб-сервиса в облаке при отказе дата-центра (Habr)
 How to Add New Features to Your App in Production and Not Ruin Anything (Medium)
 Бенчмарк как основание для принятия решения об изменении кода (Habr)
 Localization in Go with enclosing packages (Medium)
 Локализация в Go с помощью базовых пакетов (Habr)
 Как расширить функциональность ПО на продакшене, ничего не сломав (TProger)
 Краткое введение в безопасность приложений (Habr)</description>
    </item>
    
    <item>
      <title>Установка PHP 7.2 &#43; xdebug</title>
      <link>https://pavel.oborin.me/posts/php-xdebug/</link>
      <pubDate>Thu, 15 Nov 2018 16:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/php-xdebug/</guid>
      <description>brew install php@7.2
brew install autoconf
pecl install xdebug
pecl install redis
pecl install apcu
pecl install memcached</description>
    </item>
    
    <item>
      <title>Некоторые команды Кубернетиса</title>
      <link>https://pavel.oborin.me/posts/kuber-some-commands/</link>
      <pubDate>Thu, 23 Aug 2018 12:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/kuber-some-commands/</guid>
      <description>У меня на рабочем столе лежит блокнот с наиболее часто используемыми командами Кубернетиса, который я уже редко открываю. Блокнот давно пора выбросить, а данные &amp;ldquo;оцифровать&amp;rdquo; - кому-нибудь еще могут пригодиться. Сперва хотел сделать из заметок некий справочник, но команды Кубренетиса такие очевидные, что на мой взгляд дополнительных пояснений не требуют.
INSTALL MAC
 curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/darwin/amd64/kubectl 2. chmod +x ./kubectl 3. sudo mv ./kubectl /usr/local/bin/kubectl VERSION, HELP - kubectl version - kubectl help PROXY - kubectl proxy CONFIG Установка контекста - kubectl config set-context my-context &amp;ndash;namespace=mystuff - kubectl config use-context my-context LABEL - kubectl label pods bar color=red DEBUGGING - kubectl logs pod-name - kubectl exec -it pod-name &amp;ndash;bash - kubectl cp pod-name:/path/to/remote/file /path/to/local/file DELETE - kubectl delete resource-name obj-name - kubectl delete -f obj.</description>
    </item>
    
    <item>
      <title>O safarybooks и английском</title>
      <link>https://pavel.oborin.me/posts/safarybooks/</link>
      <pubDate>Wed, 22 Aug 2018 12:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/safarybooks/</guid>
      <description>Однажды, в бытность моего студенчества, я зашел в гости к своему другу. Его семья жила в самой обычной квартире, но мое внимание привлекли полки в прихожей с книгами по философии на немецком. Почему-то у меня навсегда остался в памяти этот момент. На вопрос зачем им это. Он ответил: “В нашей семье принято читать в оригинале”. Для меня в те годы это было каким-то культурным шоком. Для моего окружения это было не так естественно, как для его семьи.</description>
    </item>
    
    <item>
      <title>Про использование секретов в Кубернетис</title>
      <link>https://pavel.oborin.me/posts/kuber-secrets/</link>
      <pubDate>Fri, 10 Aug 2018 18:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/kuber-secrets/</guid>
      <description>Часто начинающие разработчики «грешат» тем, что зашивают в код, коммитят в репозиторий или пишут в базу такие данные как: адреса апи, токены, файлы с ключами, пароли. В английской литературе такие данные называются sensitive data. Если от закоммичивания паролей уже все отказались, то остальное еще можно встретить.
Хардкодить sensitive данные - это плохая практика. Во-первых, это неудобно для эксплуатации систем. Например, когда у вас разное окружение: функциональные тесты, тестовые сервера, боевые сервера, то развязать это все становится сложно.</description>
    </item>
    
    <item>
      <title>Прагматичный подход к расходованию своих ресурсов</title>
      <link>https://pavel.oborin.me/just-for-fan/writings/results/</link>
      <pubDate>Thu, 09 Aug 2018 13:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/writings/results/</guid>
      <description>Недавно я задумался над своей историей, у всех блогеров (даже начинающих) должна быть своя история :) Правда состоит в том, что самым честным и непредвзятым источником информации могут являться факты, а любая история в какой-то степени является сказкой. Но в то же время более удобный способ подачи информации, чем рассказ люди так и не придумали. Как писал Сомерсет Моэм: &amp;ldquo;Факт плохой рассказчик: обычно он приступает к рассказу наудачу, как правило задолго до начала, и обрывается на полуслове не дойдя до завершения.</description>
    </item>
    
    <item>
      <title>Про путаницу с хостами при использовании контейнеров</title>
      <link>https://pavel.oborin.me/posts/doker-host/</link>
      <pubDate>Mon, 30 Jul 2018 12:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/doker-host/</guid>
      <description>Задача:
Необходимо развернуть через Kubernetes контейнер с новым микросервисом. Апи слушает 8000 порт, соответственно необходимо обеспечить передачу внешнего запроса к контейнеру на этот порт.
До этого аналогичные задачи не вызывали особых трудностей. Однако здесь я впервые использовал новый для себя фреймворк go-swagger, и на спецификациях Kubernetes, работающих для прежних апи, новая апи по каким-то непонятным причинам не взлетела. При запуске пода Kubernetes во время проверки сервиса не мог достучаться до апи по указанному порту и завершал его работу.</description>
    </item>
    
    <item>
      <title>Как прокинуть доступ из контейнера к внешним сервисам с самоподписаными сертификатами</title>
      <link>https://pavel.oborin.me/posts/doker-certificate/</link>
      <pubDate>Sat, 21 Jul 2018 12:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/doker-certificate/</guid>
      <description>Задача:
Нужно сделать запрос из апи, развернутой в контейнере, к апи, стоящей за доменом с самоподписанным сертификатом.
Обычно для того чтобы зайти локально из браузера на такой сайт необходимо принять сертификат. При попытке же вызвать такой сервис из докера будет ошибка: «x509: certificate signed by unknown authority».
Решение:
Прокинуть файл сертификата в контейнер и добавить в список доверенных.
Для нужно добавить в ваш Dockerfile следующие строки:
COPY tmp/Company-issuer-chain.pem /usr/local/share/ca-certificates/Company-issuer-chain-chain.crt
RUN update-ca-certificates</description>
    </item>
    
    <item>
      <title>Нужно ли коммитить vendor</title>
      <link>https://pavel.oborin.me/posts/vendor/</link>
      <pubDate>Thu, 12 Jul 2018 17:35:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/vendor/</guid>
      <description>Мой совет: коммитьте.
Объясню почему. Вообще эта тема довольно холиварная - одни говорят коммитить, другие говорят ни в коем случае. У тех и у других есть свои весомые аргументы. До недавнего времени я был во второй группе. Но как-то после массовых блокировок Роскомнадзора, заблокировали и репозитории с пакетами, которыми я пользовался. Приложение перестало собираться. Работа встала на несколько часов.
Мир несовершенен, поэтому коммитьте.</description>
    </item>
    
    <item>
      <title>Как превратить создание фикстур в интересное занятие</title>
      <link>https://pavel.oborin.me/posts/fixtures/</link>
      <pubDate>Wed, 04 Jul 2018 16:30:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/fixtures/</guid>
      <description>Люди редко пишут о чем-то совершенно новом, обычно компенсируя этот недостаток количеством текста. Данная заметка небольшая, но на мой взгляд содержит новую мысль, возможно, еще никем до меня не озвученную и в этом ее главная ценность.
Однажды я полдня писал фикстуры и это меня изрядно утомило. Мне пришла в голову одна идея. Скучное занятие написания фикстур можно сделать интересным и даже любимым, если при написании фикстур привлечь творческий элемент и использовать в фикстурах данные имеющие для вас какую-то ценность.</description>
    </item>
    
    <item>
      <title>Стратегия очагового внедрения автотестов. Часть II: Концепция очаговой модели. Очаговая модель, как паттерн распространения тестов в системе</title>
      <link>https://pavel.oborin.me/posts/tests-part2/</link>
      <pubDate>Mon, 04 Jun 2018 15:41:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/tests-part2/</guid>
      <description>Вернуться к первой части
Концепция очаговой модели внедрения тестов В своей зметке я не ставлю перед собой цели осветить все вопросы и ошибки при встраивании тестов в уже работающую систему. Основная моя задача обсудить такую распространенную ошибку как применение «тактики единого центра» при добавлении тестов в систему, когда код всех подсистем переносится, прирастая к некой единой базе.
Рассмотрим пример. Допустим у вас есть три подсистемы:
 Система А: полностью покрыта тестами, своеобразный эталон; Система Б: система с большой долей легаси кода, частично покрыта тестами; Система В: очень древний код, но при этом активно задействованный.</description>
    </item>
    
    <item>
      <title>Инструменты для форматирования и анализа кода в Go</title>
      <link>https://pavel.oborin.me/posts/go-tools/</link>
      <pubDate>Mon, 04 Jun 2018 02:43:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/go-tools/</guid>
      <description>Форматирование импортов Использование:
$ goimports -d -w $(find . -type f -name &amp;lsquo;.go&amp;rsquo; -not -path &amp;ldquo;./vendor/&amp;rdquo;) 
Установка: $ go get golang.org/x/tools/cmd/goimports 
Автоформатирование кода Использование:
$ go fmt ./&amp;hellip; 
Анализ корректной обработки ошибок Использование:
$ errcheck ./&amp;hellip; 
Установка:
$ go get -u github.com/kisielk/errcheck 
Анализ кода по множеству параметров Использование:
$ gometalinter ./&amp;hellip; &amp;ndash;exclude=vendor 
Установка:
$ go get -u gopkg.in/alecthomas/gometalinter.v2  $ gometalinter &amp;ndash;install</description>
    </item>
    
    <item>
      <title>Стратегия очагового внедрения автотестов. Часть I: О роли тестирования</title>
      <link>https://pavel.oborin.me/posts/tests-part1/</link>
      <pubDate>Fri, 01 Jun 2018 18:43:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/tests-part1/</guid>
      <description>Вступление Сегодня тестирование при разработке программного обеспечения переместилось с некогда периферийных позиций на первый план, превратившись в одну из ее центральных частей. Если брать во внимание огромную сложность современных программных продуктов, то автотесты - это едва ли не единственная причина почему разработчики еще могут спокойно спать по ночам. Между тем для большинства разработчиков обучение написанию тестов до сих пор остается второстепенной задачей.
Среди множества обучающих ресурсов на любой вкус: по ООП, разработке, рефакторингу и тд, можно прокачать свои скилы в программировании, но, как только речь заходит о тестировании каждый остается практически наедине с самим собой.</description>
    </item>
    
    <item>
      <title>Да поможет нам Go. Базовые ценности и основы философии языка Go по мотивам курса Билла Кеннеди</title>
      <link>https://pavel.oborin.me/posts/go-bless-us/</link>
      <pubDate>Sat, 12 May 2018 10:58:57 +0200</pubDate>
      
      <guid>https://pavel.oborin.me/posts/go-bless-us/</guid>
      <description>Аннотация Заметка строится вокруг первой лекции курса Билла Кеннеди (William Kennedy) “Ultimate Go Programming” доступного на safaribook (https://www.safaribooksonline.com/library/view/ultimate-go-programming/9780134757476/). Меня настолько воодушевил данный курс, что показалось интересным сделать некую выжимку своего конспекта по этим лекциям.
Хочу сразу заметить, что любой человек на вопрос что он предпочтет: послушать лекцию человека, совершившего некое открытие, или лектора, который ничего не открыл, но построил свою лекцию на описании чужого открытия, выбрал бы первое. Поэтому, если у вас есть возможность получить доступ к самому курсу, то нет никакого резона продолжать это чтение.</description>
    </item>
    
    <item>
      <title>Система индивидуального планирования за 3000 руб на базе Orange Pi и Jira</title>
      <link>https://pavel.oborin.me/posts/jira-and-orange-pi/</link>
      <pubDate>Tue, 01 May 2018 10:58:57 +0200</pubDate>
      
      <guid>https://pavel.oborin.me/posts/jira-and-orange-pi/</guid>
      <description>Вступление В начале года я стал активно использовать JIRA для индивидуального планирования. Что сразу отозвалось повышением моей личной производителньости. Через пару месяцев я решил, что старый ноутбук для этого не самое лучшее решение и можно сделать лучше.
Я являюсь поклонником философии микросервисов; докер, контейнеры, кубернетис - наше все. И мне очень импонирует сама идея существования неким образом инкапсулированной системы, работающей на &amp;ldquo;отдельной&amp;rdquo; машине, не разделяющей больше ни с кем свои ресурсы.</description>
    </item>
    
    <item>
      <title>GDPR краткий обзор. Мысли и рекомендации</title>
      <link>https://pavel.oborin.me/posts/gdpr/</link>
      <pubDate>Sat, 31 Mar 2018 18:43:57 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/gdpr/</guid>
      <description>С 26 мая 2018 г. вступает в силу GDPR новый европейский закон о защите персональных данных.
Хорошее представление о законе могут дать первоисточник :) и аналитика от Института Исследования Интернета
О GDPR и его значении Закон предъявляет целый ряд существенных требований к обработке персональных данных жителей Евросоюза (точнее любого человека, находящегося на территории ЕС). Нарушение требований будет &amp;ldquo;караться&amp;rdquo; большими штрафами (озвучена цифра в 20 млн евро), потерей репутации и, возможно, запретом на работу на европейском рынке, а также уголовной ответственностью.</description>
    </item>
    
    <item>
      <title>Jira в качестве индивидуального планировщика</title>
      <link>https://pavel.oborin.me/posts/jira-for-individual-use/</link>
      <pubDate>Wed, 31 Jan 2018 08:53:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/jira-for-individual-use/</guid>
      <description>Jira в качестве индивидуального планировщика “А время уходит, жизнь твоя тратится на ерунду” (с)
Аннотация В статье описан опыт использование JIRA в качестве системы индивидуального планирования. Автор рассказывает о предпосылках в пользу такого выбора, описывает процедуру установки и дает советы по использованию.
Предыстория За неделю до Нового года я решил подвести итоги своей работы за уходящий год. Такие итоги позволяют получить более целостную картину своих результатов, и по ней дать оценку своей работе, проанализировать неудачи, выявить слабые стороны, над которыми нужно работать, и тп.</description>
    </item>
    
    <item>
      <title>Размышление о разработчиках</title>
      <link>https://pavel.oborin.me/posts/village-programmers/</link>
      <pubDate>Mon, 11 Dec 2017 22:42:10 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/village-programmers/</guid>
      <description>Размышление о разработчиках Недавно моя сестра решила сделать ремонт у себя в ванной и наняла человека, целиком положившишь на рекомендации одной своей знакомой. В итоге этот человек допустил все грубейшие ошибки какие только было можно: установил унитаз высоко и не по центру туалета, сделал трубу слива в ванной выше уровня слива самой ванной, двери в ванной и в туалете разной высоты. Сестра отдала за работу свой месячный оклад и две недели времени на контроль за исправлением (расстаться с “мастером” и нанять нового выходило уже намного дороже запланированного бюджета).</description>
    </item>
    
    <item>
      <title>Краткое введение в безопасность приложений</title>
      <link>https://pavel.oborin.me/posts/introduction-to-application-security/</link>
      <pubDate>Thu, 26 Oct 2017 17:53:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/posts/introduction-to-application-security/</guid>
      <description>Краткое введение в безопасность приложений Перевод статьи Scott Arciszewski «A Gentle Introduction to Application Security». Вступление У меня есть печальные новости для программистов, читающих эту заметку. Но, забегая вперед, сразу скажу что нет худа без добра.
Новость первая: если вы являетесь веб-разработчиком или только размышляете о том, чтобы начать изучать веб-разработку, то, вероятнее всего, вы не думаете о себе как о специалисте по безопасности. Может быть, вы принимаете во внимание некоторые угрозы безопасности, например, при валидации пользовательских данных.</description>
    </item>
    
    <item>
      <title>&#34;Железный век&#34; Джон Кутзее</title>
      <link>https://pavel.oborin.me/just-for-fan/book-reviews/age-of-iron/</link>
      <pubDate>Sun, 13 Aug 2017 20:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/book-reviews/age-of-iron/</guid>
      <description>Хочу написать отзыв о книге Железный век Джона Кутзее. По большому счету нас определяют и отделяют от других те полсотни книг, которые мы прочитали. Так почему бы не подумать над тем, что мне дала каждая вновь прочитанная. Такой мини проект, который я открываю данной заметкой.
У книги есть сюжет, Кутзее — это всегда очень высококачественная проза, книга может быть интересна широкому читателю.
Сюжет: умирающая в Африке от рака белая одинокая престарелая преподавательница университета пишет письмо своей дочери иммигрировавшей в США.</description>
    </item>
    
    <item>
      <title>&#34;Мистер Фо&#34; Джон Кутзее</title>
      <link>https://pavel.oborin.me/just-for-fan/book-reviews/foe/</link>
      <pubDate>Sun, 30 Jul 2017 13:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/book-reviews/foe/</guid>
      <description>Тут совершенно случайно познакомился с таким интересным автором, как Джон Кутзее. Его роман &amp;ldquo;Мистер Фо&amp;rdquo; оказался под одной обложкой вместе с одним из моих любимых романов &amp;ldquo;Пятница или тихоокеанский лимб&amp;rdquo; Турнье, который мне вдруг захотелось перечитать.
Сразу скажу, что не ожидаю, что все проникнутся к Мистерау Фо любовью, думаю это одна их тех книг, что изначально не задумывались для широкой аудитории. Но на мой вкус, это безусловно шедевр.
Постмодернизм всегда наводит на такие мысли как: по каким правилам живет самый обычный человек сегодня в XXI веке, может ли после всего человечество вернуться, и жить так, как жило, выкинув события прошлого, воскресить/найти себя в буржуазной идентичности и пасторалях XIX века.</description>
    </item>
    
    <item>
      <title>Игры в тумане</title>
      <link>https://pavel.oborin.me/just-for-fan/writings/games-in-the-fog/</link>
      <pubDate>Mon, 26 Oct 2015 17:53:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/writings/games-in-the-fog/</guid>
      <description>Игры в тумане. Первая повесть Основной задачей, которую я ставлю перед собой, приступая к написанию данного рассказа, является с одной стороны создание законченного текста простого для воспрития, с другой повесть с элементами саморефлексии, символизма и множественными отсылами.
Основные символы: туман, порталы, сон.
Повесть должна стать своеобразным слоеным пирогом с элементами игры, т.е вызывать интерес у разных людей. Для обывателей это будет фантастический рассказ о перелете на Марс, о возрастном кризисе, человеческих взаимоотношениях, для думающих людей это прежде всего текст о поиске себя.</description>
    </item>
    
    <item>
      <title>Ощущение пепелища</title>
      <link>https://pavel.oborin.me/just-for-fan/writings/ash/</link>
      <pubDate>Sat, 20 Sep 2014 13:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/writings/ash/</guid>
      <description>Ощущение пепелища Вчера на пробежке слушал Шуберта, и мне в голову пришел очередной образ, объясняющий реальность и тенденции в мире.
Это пепелище.
Мы живем на пепелище.
Все более менее значимое уже давно выгорело. Какие-то последние крохи человечество еще высасывает, но это все.
Больше ничего. Мир без красок, запахов, эмоций, стерильный мир выжженной земли. Не будет больше ни Моцарта, ни Бетховена, ни Шуберта. И понятно почему.
Теперь можно играться только с пеплом, отсюда минимализм.</description>
    </item>
    
    <item>
      <title>&#34;Банальность зла&#34; Ханна Арендт</title>
      <link>https://pavel.oborin.me/just-for-fan/book-reviews/eichmann-in-jerusalem/</link>
      <pubDate>Sat, 17 May 2014 13:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/book-reviews/eichmann-in-jerusalem/</guid>
      <description>У Ханны есть книга &amp;ldquo;Банальность зла&amp;rdquo; давненько я ее читал, в русском переводе названия добавилась игра слов, которая очень хорошо выражает суть ее мысли. Зло не просто банально - самое настоящее зло творят совсем не какие-то супер злодеи, а обычные обыватели; БАНАЛЬНОСТЬ и вторичность и есть зло.
Похоже, что большая часть зла в мире от банальных людей, от того, что люди как-то мимикирируют к каким-то общепринятым типажам, объединяются в стада, перестают быть носителями чего-то индивидуального, нового.</description>
    </item>
    
    <item>
      <title>&#34;Матисс&#34; Александр Иличевский</title>
      <link>https://pavel.oborin.me/just-for-fan/book-reviews/matisse/</link>
      <pubDate>Tue, 13 Nov 2012 13:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/book-reviews/matisse/</guid>
      <description>Перечитываю Матисса Иличевского, вернее вырываю кусками.
Говорят, что любой читатель ассоциирует себя с тем или иным героем именно в этом и заключается успех (в плане потребления) книги.
В Матиссе сразу 2 таких героя: дурочка Надя и бывший аспирант Королев.
Кроме того, это отличная книга, прекрасные красочные описания, которые не просто прочувствоваются во время чтения, а врезаются, становясь твоими собственными воспоминаниями.
В Матиссе можно наугад открыть любое место и наслаждаться:
&amp;ldquo;Слабоумие проникало в Надю онемением.</description>
    </item>
    
    <item>
      <title>Книги</title>
      <link>https://pavel.oborin.me/just-for-fan/writings/books/</link>
      <pubDate>Thu, 18 Mar 2010 13:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/writings/books/</guid>
      <description>Книги Мой друг любит книги
Моя подруга любит людей
Я люблю наблюдать за ними.
Один раз научившись читать, ты уже не сможешь наслаждаться непониманием.
Как бы ты того не хотел, знаки превращаются в буквы, буквы в слова, слова в предложения. Выражение в содержание.
Люди, как книги.
Они различаются содержанием, тиражом, иллюстрациями, пестротой обложки, толщиной, целями и задачами, реципиентами, издательством, потертостью, количеством авторов…
Есть книги понятные, есть непонятные, есть которые никогда не поймешь.</description>
    </item>
    
    <item>
      <title>Свободный день</title>
      <link>https://pavel.oborin.me/just-for-fan/writings/freeday/</link>
      <pubDate>Mon, 15 Mar 2010 13:30:40 +0500</pubDate>
      
      <guid>https://pavel.oborin.me/just-for-fan/writings/freeday/</guid>
      <description>Свободный день Странное такое ощущение
с утра было тихо и спокойно: снег блестел на солнце, все было белым, флигель на крыше в форме ангела смотрел на восток, часы с разбитым стеклом в аллее показывали пол десятого, я ел фундук и выплевывал скорлупки на белый снег.
Общага, мокрые носки, трамвай, Димка; тренажерный зал, улыбающаяся девушка на входе, похоже она счастлива. Беговая дорожка, я бегу и остаюсь на месте передо мной облака.</description>
    </item>
    
  </channel>
</rss>